{"title":"","author":"jdotpz","content":"#New Elasticsearch Infrastructure for Our Logging\nThis week we went to a class on the [ELK stack](http://www.elasticsearch.org/overview/) (Elasticsearch, Logstash, and Kibana) to learn how to better scale and manage our logging service (which receives ~5 million logs per day).\n\nThe most obvious component to a better scaling logging infrastructure was to get our Elasticsearch setup sanely.  I'm putting notes for how I am doing that here.  (Note, this is currently in draft form)\n\n~~~~\n\n# This will be optimized to scale up to 5 servers(and quite vertically after that)\n\n## First, launch an server on Ubuntu 12.04\n\n* AMI ID ami-a49665cc in us-east-1\n\n* m3.4xlarge\n\n* 20gb EBS root volume\n\n* xvdb set as a 500gb 1000pIOPs blank volume\n\n* Security group that is appropriate...note which group this is for later\n\n* A role for EC2 read privileges (for the AWS auto-discovery plugin)\n\n## Install software after ssh'ing into the new server\n\nwget -O - http://packages.elasticsearch.org/GPG-KEY-elasticsearch | sudo apt-key add -\n\necho \"deb http://packages.elasticsearch.org/elasticsearch/1.0/debian stable main\"  | sudo tee /etc/apt/sources.list.d/elasticsearch10.list\n\nsudo apt-get update\n\nsudo apt-get -y install openjdk-7-jre-headless elasticsearch=1.0.1\n\n# Install Elasticsearch-cloud-aws plugin for v1.0* of ES\n\ncd /usr/share/elasticsearch\n\nsudo bin/plugin -install elasticsearch/elasticsearch-cloud-aws/2.0.0\n\n\n# If you use marvel for monitoring ES, install that plugin too\n\nsudo  bin/plugin -install elasticsearch/marvel/latest\n\n# In /etc/elasticsearch/elasticsearch.yml uncomment and change the cluster name\n\ncluster.name: loggins\n\n# In the same file, /etc/elasticsearch/elasticsearch.yml uncomment and change the path.data\npath.data: /mnt/data\n\n# In teh same file, /etc/elasticsearch/elasticsearch.yml uncomment the mlockall option\nbootstrap.mlockall: true\n\n# In the same file, /etc/elasticsearch/elasticsearch.yml uncomment and change\ndiscovery.zen.ping.timeout: 10s\n\n\n# Make sure that the ES_MIN_MEM and ES_MAX_MEM\n\n## Add your auto-discovery settings to the bottomof the elasticsearch.yml file\n\ndiscovery.type: ec2\n\ndiscovery.ec2.groups: your-elasticsearch-ec2-sg\n\ndiscovery.zen.ping.multicast.enabled: false\n\ndiscovery.ec2.groups: your-elasticsearch-ec2-sg\n\n## In /etc/default/elasticsearch, uncomment and change\n\nES_HEAP_SIZE=16gb\n\n## Set filesystem limits\n\n* Inside of /etc/security/limits.conf, put this at the bottom\n\nelasticsearch hard nofile 65535\n\nelasticsearch soft nofile 65535\n\nubuntu hard nofile 65535\n\nubuntu soft nofile 65535\n\n\n* Inside of /etc/pam.d/common-session, add the following line to the bottom\n\nsession required pam_limits.so\n\n* Open /etc/pam.d/su and ensure this line is uncommented:\n\nsession    required   pam_limits.so\n\n* Open /etc/pam.d/login and ensure this line is uncommented:\n\nsession    required   pam_limits.so\n\n\n## Setting up some fast disk for Elasticsearch to put data on\n\n* First, use the command:  sudo fdisk /dev/xvdb\n\nHit n for new\n\nHit p for primary\n\nHit enter for default first sector\n\nHit enter for default last sector\n\n\n* Your output should look like\n\nSelect (default p): p\n\nPartition number (1-4, default 1):\n\nUsing default value 1\n\nFirst sector (2048-1048575999, default 2048):\n\nUsing default value 2048\n\nLast sector, +sectors or +size{K,M,G} (2048-1048575999, default 1048575999):\n\nUsing default value 1048575999\n\n* Now hit w to write\n\nCommand (m for help): w\n\nThe partition table has been altered!\n\nCalling ioctl() to re-read partition table.\n\nSyncing disks.\n\n\n# Now, we'll make a new ext4 filesystem with that new disk\n\nsudo mkfs -t ext4 /dev/xvdb1\n\n# Now, lets make a mount point\n\nsudo mkdir /mnt/data\n\n# Now, lets be sure this gets mounted every time the server boots.\n\n**Add this to your /etc/fstab**\n\n/dev/xvdb1    /mnt/data   ext4    noatime     0        2\n\n# Now, mount up!\n\nsudo mount -a\n\n# We want that data dir owned by elasticsearch\n\nsudo chown -R elasticsearch:elasticsearch /mnt/data\n\n# Verify you have a new filesystem loaded in /mnt/data\n\ndf -h\n\nOutput:  /dev/xvdb1      493G  198M  467G   1% /mnt/data\n\n\n## Reboot!\nsudo shutdown -Fr now\n\n~~~\n\nWhen the server is restarted, I recommend you create an AMI from this server (Amazon Machine Image, a template for launching clone servers).  \n\nNow, all you have to do to \"Autoscale\" is add nodes to the same security group and Elasticsearch will do the rest.  ","tags":["no tags yet"],"published":1402498716135,"updated":1403073005338}